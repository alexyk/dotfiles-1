#!/usr/bin/env ruby -w
# An ad hoc, informally-specified, bug-ridden, slow implementation of
# half of Common Lisp.
#
# Or alternatively, a tiny script to ease the Rename Class refactoring
# in *my* rails projects.
#
# Use at your own peril.
#
# Author: Stefan Kanev

require 'fileutils'
require 'optparse'
require 'ostruct'

options = OpenStruct.new
options.dry = false

optparser = OptionParser.new do |opts|
  opts.banner =    "Usage: rename_in_rails [type] [from] [to]"
  opts.define_head "Abstract description of script"
  opts.separator   ""
  opts.separator   "Renames Rails infrastructure files"

  opts.on('-n', '--dry-run', 'Dry run (show instead of do)') do |dry|
    options.dry = dry
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end
optparser.parse!(ARGV)

optparser.abort "You have to specify [type] [from] [to]. Check -h for details" if ARGV.size != 3

def rename(from, to) mv(from, to) if File.exists?(from) end
include options.dry ? FileUtils::DryRun : FileUtils::Verbose

kind, from, to = *ARGV
case kind
  when 'model'
    rename "app/models/#{from}.rb",                       "app/models/#{to}.rb"
    rename "spec/models/#{from}_spec.rb",                 "spec/models/#{to}_spec.rb"
    rename "spec/fixtures/#{from}s.yml",                  "spec/fixtures/#{to}s.yml"
    rename "features/step_definitions/#{from}s_steps.rb", "features/step_definitions/#{to}s_steps.rb"
  when 'controller'
    rename "app/controllers/#{from}_controller.rb",       "app/controllers/#{to}_controller.rb"
    rename "app/helpers/#{from}_helper.rb",               "app/helpers/#{to}_helper.rb"
    rename "app/views/#{from}",                           "app/views/#{to}"
    rename "spec/controllers/#{from}_controller_spec.rb", "spec/controllers/#{to}_controller_spec.rb"
    rename "spec/helpers/#{from}_helper_spec.rb",         "spec/helpers/#{to}_helper_spec.rb"
    rename "spec/views/#{from}",                          "spec/views/#{to}"
  when 'lib'
    rename "lib/#{from}",        "lib/#{to}"
    rename "spec/lib/#{from}",   "spec/lib/#{to}"
  else
    optparser.abort "Don't know how to rename type: #{kind}"
end
