#!/bin/bash

git_log_pretty() {
    HASH="%C(yellow)%h%C(reset)"
    RELATIVE_TIME="%C(green)(%ar)%C(reset)"
    AUTHOR="%C(bold blue)<%an>%C(reset)"
    REFS="%C(red)%d%C(reset)"
    SUBJECT="%s"

    FORMAT="$HASH}$RELATIVE_TIME<time>}$AUTHOR<author>}$REFS $SUBJECT"

    git log --color --graph --abbrev-commit --date=relative --pretty="tformat:${FORMAT}" $* |
        sed -E -e 's/\(([[:digit:]]+) ([[:alpha:]]+).* ago\)/(\1 \2)/' |
        awk '
          BEGIN { FS = "}"; OFS = "}" }
          function strip(str) {
            gsub(/\x1B\[[0-9;]*[mK]/, "", str)
            return str
          }
          { print $1, "<" strip($1) FS ">" $2, $3, $4 }
        ' |
        column -s '}' -t |
        awk '{
          match($0, /<[^>]*>/)
          stripped = substr($0, RSTART + 1, RLENGTH - 2)
          graph    = substr($0, 1, RSTART - 1)
          line     = substr($0, RSTART + RLENGTH)

          match(stripped, / *$/)
          trailing_spaces = RLENGTH

          match(graph, / *$/)
          graph = substr(graph, 1, RSTART + trailing_spaces - 2)

          sub(/<time> /, "", line)
          sub(/<author>  /, "", line)

          print graph line
        }' |
        less -FXRS
}

git_catch_up() {
    dir=$(mktemp -d git-catch-up.XXXXXXXXXXX)
    lesskey_file="$dir/lesskey"
    index_file="$dir/index"
    github_project=$(git config remote.origin.url | sed -e 's/^.*[:\/]\([a-zA-Z]*\/[-a-zA-Z0-9_]*\)\.git$/\1/')

    banner="#############################################################################"
    message="%s%n%n%b%n"
    commit="* Commit   %H"
    author="* Author:  %an"
    date="* Date:    %ad"
    comment="* Comment: https://github.com/$github_project/commit/%h"
    format="$banner%n$message%n$commit%n$author%n$date%n$comment%n$banner"

    number=0

    for commit in $(git rev-list --all --no-merges --reverse --since="1 day")
    do
        number=$[number + 1]
        commit_file=$(printf "$dir/commit%04d" $number)
        git log --color --pretty="%C(yellow)%h%C(reset) %C(blue)<%an>%C(reset) %s" "$commit~1..$commit" >> "$index_file"
        git show --color --pretty="tformat:$format" $commit > "$commit_file"
    done

    cat <<END | lesskey -o "$dir/lesskey" -
#command
h prev-file
l next-file
0 index-file
END

    less -cFXRS --lesskey-file="$lesskey_file" -- $index_file $dir/commit*

    rm -r $dir
}
